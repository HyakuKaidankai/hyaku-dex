---
const { pkmn } = Astro.props

let movement_capabilities = ["Overland", "Sky", "Swim", "Levitate", "Burrow", "H Jump", "L Jump"]

---
<div class="card bg-base-200 text-neutral-content border-base-300 rounded-box border">
    <div class="card-body p-[15px]">
        <p class="px-4 pb-2 text-xs opacity-60 tracking-wide">Movement capabilities</p>
        <div class="flex flex-wrap gap-2 justify-evenly">
            {movement_capabilities.map( (capability:any) => (
                    <div class="card bg-base-100 border border-base-300 p-[5px] w-[75px]">                    
                        <div class="font-base text-xs text-center mb-[2px]">{capability}</div>
                        <div class="font-thin text-xs text-center opacity-80 tabular-nums">{pkmn[capability]}</div>
                    </div>
                ))} 
        </div>              
    </div>
</div>
<div class="card bg-base-200 text-neutral-content border-base-300 rounded-box border">
    <div class="card-body p-[15px]">
        <ul class="list">
            <li class="px-4 pb-2 text-xs opacity-60 tracking-wide">Other capabilities</li>
            { pkmn.Naturewalk != "-" &&            
            <li class="list-row py-2">
                <div class="list-col-grow text-xs">Naturewalk</div>
                <div class="text-xs">{pkmn.Naturewalk}</div>
            </li>
            }
            <li class="list-row py-2">
                <div class="text-xs">Power {pkmn.Power}</div>
            </li>
            {[...Array(9).keys()].map(i => {
                const capabilityKey = (`Capability ${i + 1}`)
                if(pkmn[capabilityKey] != "-") {
                return (
                <li class="list-row py-2">
                    <div class="text-xs">{pkmn[capabilityKey]}</div>
                </li>
            )}})}
        </ul>        
    </div>
</div>

