---
import {Image} from "astro:assets";
import TypeData from "../../data/type_data.json";
import AltNames from "../../data/alt_names.json";
import TypeBadge from "../../components/ui/TypeBadge.astro";

const { pkmn } = Astro.props;

function getColor(name: string) {
    let n = name.toLowerCase();
    let type = TypeData.find(type => type.name === n)!;
    return type;
}

function getAltName(name: string) {
    let n = name.toLowerCase();
    let res = AltNames.find(data => data["Canonical Name"]?.toLowerCase() === n);
    if(res) {
        return res["Readable name"]
    } else {
        return name
    }
}

const pkmnAltName = getAltName(pkmn["Species Name"])
 
---
<a class="pkmn-container" href={`/pkmn/${pkmn["Species Name"]}`}
data-name={pkmn["Species Name"]} 
data-alt-name={pkmnAltName}
data-t1={pkmn["Type1"]} 
data-t2={pkmn["Type2"]}>
    <div class="flex w-[380px] h-[110px] bg-base-200 border-base-300 rounded-box border p-[5px]" style={{
        background: `linear-gradient(0deg,${getColor(pkmn["Type1"]).color} 0%, ${getColor(pkmn["Type1"]).color}60 40%, transparent 100%);`
      }}>
        <figure class="flex-none p-[5px] rounded-box">
            <Image 
            src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${pkmn['API ID']}.png`} 
            alt={`${pkmn["Species Name"]}`} 
            width="86"
            height="86"
            decoding="async"
            loading="lazy"
            />
        </figure>
        <div class="flex flex-col flex-1">
            <div class="flex flex-1 justify-around content-center items-center">
                <h1 class="text-center font-semibold tracking-wide text-xl mb-[5px]">{pkmnAltName}</h1>
            </div>
            <div class="flex flex-1 justify-around content-center items-center">
                { pkmn["Type1"] && <TypeBadge typeName={ pkmn["Type1"] } /> }
                { pkmn["Type2"] && <TypeBadge typeName={ pkmn["Type2"] } /> }
            </div>
        </div>
    </div>
</a>
    